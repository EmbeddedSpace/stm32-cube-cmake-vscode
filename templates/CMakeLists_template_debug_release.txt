cmake_minimum_required(VERSION 3.22)

message("Entering ${CMAKE_CURRENT_LIST_DIR}/CMakeLists.txt")

#
# Core project settings
#
set(PROJ_PATH                       ${CMAKE_CURRENT_SOURCE_DIR})
project({{sr:project_name}})
enable_language(C CXX ASM)
message("Build type: "              ${CMAKE_BUILD_TYPE})

#
# Core MCU flags, CPU, instruction set and FPU setup
#
set(CPU_PARAMETERS
    -mthumb
    $<$<CONFIG:Debug>:
        {{sr:m_debug_cpu}}
        {{sr:m_debug_fpu}}
        {{sr:m_debug_float_abi}}
    >
    $<$<CONFIG:Release>:
        {{sr:m_release_cpu}}
        {{sr:m_release_fpu}}
        {{sr:m_release_float_abi}}
    >
)

# Set linker script
set(linker_script_debug_SRC         {{sr:linker_script_debug_SRC}})
set(linker_script_release_SRC       {{sr:linker_script_release_SRC}})
set(EXECUTABLE                      ${CMAKE_PROJECT_NAME})

# Setup compiler settings
set(CMAKE_C_STANDARD                11)
set(CMAKE_C_STANDARD_REQUIRED       ON)
set(CMAKE_C_EXTENSIONS              ON)
set(CMAKE_CXX_STANDARD              20)
set(CMAKE_CXX_STANDARD_REQUIRED     ON)
set(CMAKE_CXX_EXTENSIONS            ON)

#
# Source files
#
set(linked_SRCS
    {{sr:linked_SRCS}}
)
{{sr:set_source_folder_files}}

# Source files in the same path as ".cproject/.project" but nowhere included in file descriptions
set(all_project_dir_SRCS
    {{sr:all_project_dir_SRCS}}
)

#
# Include directories
#
set(include_c_debug_DIRS
    {{sr:include_c_debug_DIRS}}
)
set(include_cxx_debug_DIRS
    {{sr:include_cxx_debug_DIRS}}
)
set(include_asm_debug_DIRS
    {{sr:include_asm_debug_DIRS}}
)
set(include_c_release_DIRS
    {{sr:include_c_release_DIRS}}
)
set(include_cxx_release_DIRS
    {{sr:include_cxx_release_DIRS}}
)
set(include_asm_release_DIRS
    {{sr:include_asm_release_DIRS}}
)

#
# Symbols definition
#
set(symbols_c_debug_SYMB
    {{sr:symbols_c_debug_SYMB}}
)
set(symbols_cxx_debug_SYMB
    {{sr:symbols_cxx_debug_SYMB}}
)
set(symbols_asm_debug_SYMB
    {{sr:symbols_asm_debug_SYMB}}
)
set(symbols_c_release_SYMB
    {{sr:symbols_c_release_SYMB}}
)
set(symbols_cxx_release_SYMB
    {{sr:symbols_cxx_release_SYMB}}
)
set(symbols_asm_release_SYMB
    {{sr:symbols_asm_release_SYMB}}
)

#
# Link directories setup
# Must be before executable is added
#
set(link_debug_DIRS
    {{sr:link_debug_DIRS}}
)
set(link_release_DIRS
    {{sr:link_release_DIRS}}
)
if (CMAKE_BUILD_TYPE EQUAL "DEBUG")
    link_directories(${EXECUTABLE} ${link_debug_DIRS})
else()
    link_directories(${EXECUTABLE} ${link_release_DIRS})
endif()

#
# Executable files
#
add_executable(${EXECUTABLE}
    ${linked_SRCS}
    ${all_project_dir_SRCS} {{sr:set_source_folder_files_variables}})

#
# Add linked libraries for linker
#
set(link_debug_LIBS
    {{sr:link_debug_LIBS}}
)
set(link_release_LIBS
    {{sr:link_release_LIBS}}
)
if (CMAKE_BUILD_TYPE EQUAL "DEBUG")
    target_link_libraries(${EXECUTABLE} ${link_debug_LIBS})
else()
    target_link_libraries(${EXECUTABLE} ${link_release_LIBS})
endif()

#
# Project symbols
#
target_compile_definitions(${EXECUTABLE} PRIVATE
    # Language specific only
    $<$<COMPILE_LANGUAGE:C>: >
    $<$<COMPILE_LANGUAGE:CXX>: >
    $<$<COMPILE_LANGUAGE:ASM>: >

    # Language and configuration specific
    $<$<AND:$<CONFIG:Debug>,$<COMPILE_LANGUAGE:C>>: ${symbols_c_debug_SYMB}>
    $<$<AND:$<CONFIG:Debug>,$<COMPILE_LANGUAGE:CXX>>: ${symbols_cxx_debug_SYMB}>
    $<$<AND:$<CONFIG:Debug>,$<COMPILE_LANGUAGE:ASM>>: ${symbols_asm_debug_SYMB}>
    $<$<AND:$<CONFIG:Release>,$<COMPILE_LANGUAGE:C>>: ${symbols_c_release_SYMB}>
    $<$<AND:$<CONFIG:Release>,$<COMPILE_LANGUAGE:CXX>>: ${symbols_cxx_release_SYMB}>
    $<$<AND:$<CONFIG:Release>,$<COMPILE_LANGUAGE:ASM>>: ${symbols_asm_release_SYMB}>

    # Configuration specific
    $<$<CONFIG:Debug>:
        DEBUG
    >
    $<$<CONFIG:Release>: >
)

#
# Add include paths for each of the compiler
#
target_include_directories(${EXECUTABLE} PRIVATE
    # Language specific only
    $<$<COMPILE_LANGUAGE:C>: >
    $<$<COMPILE_LANGUAGE:CXX>: >
    $<$<COMPILE_LANGUAGE:ASM>: >

    # Language and configuration specific
    $<$<AND:$<CONFIG:Debug>,$<COMPILE_LANGUAGE:C>>: ${include_c_debug_DIRS}>
    $<$<AND:$<CONFIG:Debug>,$<COMPILE_LANGUAGE:CXX>>: ${include_cxx_debug_DIRS}>
    $<$<AND:$<CONFIG:Debug>,$<COMPILE_LANGUAGE:ASM>>: ${include_asm_debug_DIRS}>
    $<$<AND:$<CONFIG:Release>,$<COMPILE_LANGUAGE:C>>: ${include_c_release_DIRS}>
    $<$<AND:$<CONFIG:Release>,$<COMPILE_LANGUAGE:CXX>>: ${include_cxx_release_DIRS}>
    $<$<AND:$<CONFIG:Release>,$<COMPILE_LANGUAGE:ASM>>: ${include_asm_release_DIRS}>

    # Configuration specific
    $<$<CONFIG:Debug>: >
    $<$<CONFIG:Release>: >
)

# Compiler and linker options
target_compile_options(${EXECUTABLE} PRIVATE
    ${CPU_PARAMETERS}
    -Wall
    -Wextra
    -Wpedantic
    -Wno-unused-parameter
    $<$<COMPILE_LANGUAGE:C>:

    >
    $<$<COMPILE_LANGUAGE:CXX>:
        #-Wno-volatile
        #-Wold-style-cast
        #-Wuseless-cast
        #-Wsuggest-override
    >
    $<$<COMPILE_LANGUAGE:ASM>:

    >
    $<$<CONFIG:Debug>:
        -Og -g3 -ggdb
    >
    $<$<CONFIG:Release>:
        -Og -g0
    >
)

# Setup linker parameters
target_link_options(${EXECUTABLE} PRIVATE
    $<$<CONFIG:Debug>:
        -T${MCU_LINKER_SCRIPT}${linker_script_debug_SRC}
    >
    $<$<CONFIG:Release>:
        -T${MCU_LINKER_SCRIPT}${linker_script_release_SRC}
    >
    ${CPU_PARAMETERS}
    -Wl,-Map=${CMAKE_PROJECT_NAME}.map
    --specs=nosys.specs
    -Wl,--start-group
    -lc
    -lm
    -lstdc++
    -lsupc++
    -Wl,--end-group
    -Wl,--print-memory-usage
)

# Execute post-build to print size
add_custom_command(TARGET ${EXECUTABLE} POST_BUILD
    COMMAND ${CMAKE_SIZE} $<TARGET_FILE:${EXECUTABLE}>
)

# Convert output to hex and binary
add_custom_command(TARGET ${EXECUTABLE} POST_BUILD
    COMMAND ${CMAKE_OBJCOPY} -O ihex $<TARGET_FILE:${EXECUTABLE}> ${EXECUTABLE}.hex
)

# Conver to bin file -> add conditional check?
add_custom_command(TARGET ${EXECUTABLE} POST_BUILD
    COMMAND ${CMAKE_OBJCOPY} -O binary $<TARGET_FILE:${EXECUTABLE}> ${EXECUTABLE}.bin
)

message("Exiting ${CMAKE_CURRENT_LIST_DIR}/CMakeLists.txt")